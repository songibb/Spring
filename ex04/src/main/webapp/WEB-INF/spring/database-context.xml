<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- <context:property-placeholder location="classpath:config/db.properties" /> -->
	<!-- properties는 디폴트 파일이 아니라 따로 읽어들여야하는데, 암호화 진행할 빈이 해당할 파일 읽어들이면서 해석해야함 -->
	
	
	<!-- 환경변수를 저장 -->
	<bean id="environmentVariablesConfiguration"
     	class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
		<!-- 알고리즘 value는 굳이 변경하지 않아도됨 -->
   		<property name="algorithm" value="PBEWithMD5AndDES" /> 		
   		<!-- 알고리즘을 유니크하게 만들기 위해 만드는 Key 값 => 프로젝트내의 그 어떤 파일에도 존재하면 안되고, 온라인에 오픈해서도 안됨 -->
   		<property name="password" value="${jasypt.encryptor.password}" />
 	</bean>
	
	<!-- 암호화 작업 -->
	<bean id="configurationEncryptor"
     	class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
  	 	<property name="config" ref="environmentVariablesConfiguration" />
 	</bean>

	<!-- Properties 파일을 읽어서 해석 -->
	<bean id="propertyConfigurer"
     class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
   		<constructor-arg ref="configurationEncryptor" />
   		<property name="locations">
			<list>
			  <value>classpath:config/db.properties</value>
			</list>
		</property>
	</bean>






	<!-- datasource connection pool -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${pwd}" />
	</bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>


	<!-- mybatis SqlSessionFactory -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:config/mybatis-config.xml" />
		<property name="mapperLocations"
			value="classpath*:com/yedam/web/**/mapper/*Mapper.xml" />
	</bean>

	<!-- mapper scan -->
	<mybatis-spring:scan base-package="com.yedam.web.**.mapper" />


	<!-- TransactionManager bean 등록 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- @Transactional 어노테이션 처리 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>
